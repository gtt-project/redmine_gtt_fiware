json = {
  "@context": url_for(controller: 'context', action: 'index', type: 'users', only_path: false, format: :jsonld),
  "id": url_for(only_path: false, format: :jsonld, normalized: @normalized),
  "type": 'User',
  "login": {
    "type": 'Property',
    "value": @user.login
  },
  "firstName": {
    "type": 'Property',
    "value": @user.firstname
  },
  "lastName": {
    "type": 'Property',
    "value": @user.lastname
  },
  "email": {
    "type" => 'Property',
    "value" => (User.current.admin? || !@user.pref.hide_mail) ? @user.mail : nil
  },
  "status": {
    "type" => 'Property',
    "value" => User.current.admin ? @user.status : nil
  },
  "lastLoginDate": {
    "type": 'Property',
    "value": @user.last_login_on
  },
  "createdAt": {
    "type": 'Property',
    "value": @user.created_on
  },
  "modifiedAt": {
    "type": 'Property',
    "value": @user.updated_on
  },
}

# TODO: optional includes

if @user.geom
  json[:location] = {
    "type": 'GeoProperty',
    "value": @user.geojson['geometry']
  }
else
  json[:location] = nil
end

# Handle custom fields
CustomFieldHelper.process_custom_fields(json, @user.visible_custom_field_values, self, @normalized)

# Output NGSI documents
if ngsiv2
  # Output as NGSI-v2
  JsonldHelper.to_ngsi_v2(
    JsonldHelper.to_non_normalized(json)
  )
else
  if @normalized
    # Output as normalized NGSI-LD
    json
  else
    # Output as non-normalized NGSI-LD
    JsonldHelper.to_non_normalized(json)
  end
end
