// Build the request headers
var headers = new Headers();
headers.append('Content-Type', 'application/json');

<% if @subscription_template.fiware_service.present? %>
  headers.append('Fiware-Service', '<%= @subscription_template.fiware_service %>');
<% end %>

<% if @subscription_template.fiware_servicepath.present? %>
  headers.append('Fiware-ServicePath', '<%= @subscription_template.fiware_servicepath %>');
<% end %>

// Build the request options
var requestOptions = {
  method: 'POST',
  headers: headers,
  body: '<%= @json_payload.html_safe %>',
  redirect: 'follow'
};

function showNotification(message) {
  // Get the notification box
  var notification = document.getElementById('temporaryNotification');

  // Change the text of the notification box
  notification.textContent = message;

  // Show the notification box
  notification.classList.add('visible');

  // Hide the notification box after 3 seconds
  setTimeout(function() {
    notification.classList.remove('visible');
  }, 3000);
}

// Send the POST request
fetch('<%= @broker_url %>', requestOptions)
  .then(response => {
    var location = response.headers.get('Location');
    if (!location) {
      throw new Error('Location header is missing in the response');
    }
    var parts = location.split('/');
    var subscriptionId = parts[parts.length - 1];

    // Send the PATCH request to update the subscription_id
    return fetch('<%= update_subscription_id_project_subscription_template_path(@project, @subscription_template) %>', {
      method: 'PATCH',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': '<%= form_authenticity_token %>'
      },
      body: JSON.stringify({ subscription_id: subscriptionId })
    });
  })
  .then(response => response.text())
  .then(result => {
    // Update the subscription template list
    var subscriptionTemplateList = document.getElementById('subscriptionTemplateList');
    subscriptionTemplateList.innerHTML = result;

    // Show success notification
    showNotification("<%= l(:subscription_published) %>");
  })
  .catch(error => {
    console.log('error', error);

    // Show error notification
    showNotification("<%= l(:subscription_published_error) %>");
  });
