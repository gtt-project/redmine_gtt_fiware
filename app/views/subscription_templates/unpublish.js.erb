// Build the request headers
var headers = new Headers();

// Build the request options for the DELETE request
var deleteRequestOptions = {
  method: 'DELETE',
  headers: headers,
  redirect: 'follow'
};

// Send the DELETE request to the Orion broker
fetch('<%= @broker_url %>', deleteRequestOptions)
  .then(response => {
    // Get the notification box
    var notification = document.getElementById('temporaryNotification');

    if (!response.ok) {
      console.warn('Warning: Network response was not ok');
      notification.textContent = "<%= l(:subscription_unpublished_warning) %>";
    } else {
      notification.textContent = "<%= l(:subscription_unpublished) %>";
    }

    // Show the notification box
    notification.classList.add('visible');

    // Hide the notification box after 3 seconds
    setTimeout(function() {
      notification.classList.remove('visible');
    }, 3000);

    // Send the PATCH request to update the subscription_id
    return fetch('<%= update_subscription_id_project_subscription_template_path(@project, @subscription_template) %>', {
      method: 'PATCH',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': '<%= form_authenticity_token %>'
      },
      body: JSON.stringify({ subscription_id: "" }) // Clear the subscription_id field
    });
  })
  .then(response => response.text())
  .then(result => {
    // Update the subscription template list
    var subscriptionTemplateList = document.getElementById('subscriptionTemplateList');
    subscriptionTemplateList.innerHTML = result;
  })
  .catch(error => console.log('error', error));
