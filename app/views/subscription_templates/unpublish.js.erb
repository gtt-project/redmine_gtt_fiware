// Build the request headers
var headers = new Headers();

<% if @subscription_template.fiware_service.present? %>
  headers.append('Fiware-Service', '<%= @subscription_template.fiware_service %>');
<% end %>

<% if @subscription_template.fiware_servicepath.present? %>
  headers.append('Fiware-ServicePath', '<%= @subscription_template.fiware_servicepath %>');
<% end %>

var authToken = document.getElementById('subscription_auth_token').value;
if (authToken) {
  headers.append('Authorization', 'Bearer ' + authToken);
}

// Build the request options for the DELETE request
var deleteRequestOptions = {
  method: 'DELETE',
  headers: headers,
  redirect: 'follow'
};

// Send the DELETE request to the Orion broker
fetch('<%= @broker_url %>', deleteRequestOptions)
  .then(response => {
    if (!response.ok) {
      console.warn('Warning: Network response was not ok');
      showNotification("<%= l(:subscription_unpublished_warning) %>");
    } else {
      showNotification("<%= l(:subscription_unpublished) %>");
    }

    // Send the PATCH request to update the subscription_id
    return fetch('<%= update_subscription_id_project_subscription_template_path(@project, @subscription_template) %>', {
      method: 'PATCH',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': '<%= form_authenticity_token %>'
      },
      body: JSON.stringify({ subscription_id: "" }) // Clear the subscription_id field
    });
  })
  .then(response => response.text())
  .then(result => {
    // Update the subscription template list
    var subscriptionTemplateList = document.getElementById('subscriptionTemplateList');
    subscriptionTemplateList.innerHTML = result;
  })
  .catch(error => console.log('error', error));
